// SPDX-License-Identifier: MIT
pragma solidity 0.8.18;

contract MyToken {

    // public variables here
    string public tokenName = "FutureCompany"; //Name of the token
    string public tokenAbbrv = "Fcom"; //token abbreviation
    uint public totalSupply = 0; //total supply of tokens

    // mapping to store token balances 
    mapping (address => uint) public balances;

    // mint function to add tokens to an address
    function mint(address _address, uint _value) public 
    {
        balances[_address] += _value; //adds tokens to the provided address
        totalSupply += _value; //adds the minted token to the total supply 
    }

    // burn function to burn the token from an address
    function burn(address _address, uint _value) public 
    {
        if(balances[_address] >= _value)
        {
            balances[_address] -= _value; //deducts tokens from the provided address
            totalSupply -= _value; //deducts tokens from the main supply 
        }
    }
    // payable function to transfer tokens from one address to other address
    function send(address Send_address, address Receiver_address, uint _value) public  
    {
        if(balances[Send_address] >= _value)
        {
            balances[Send_address] -= _value; //tokens are deducted from the sender's account
            balances[Receiver_address] += _value; //tokens are added to the receiver's account
        }
    }
}
